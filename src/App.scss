// Colors
$white: #ffffff;
$black: #272727;
$dark-black: #000000;
$red: #D32300;
$light-black: #272727;
$alpha-light: .1;
$alpha-dark: .6;
$alpha-darker: .75;
$alpha-darkest: .8;
$transparent-gray-bg: rgba($black, $alpha-dark);
$transparent-black-bg: rgba($black, $alpha-darkest);
$section-header-lines-color: rgba($dark-black, $alpha-light);
$text-overlay-bg: rgba($white, $alpha-darker);

// Fonts
$lato: 'Lato', sans-serif;

/*
MIXINS
 */
// Media query mixins
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
    content: $content;
    display: $display;
    position: $pos;
}

// To quickly centre a block element without having to worry about
// if there is any top or bottom margin already applied.
@mixin push--auto {
    margin: {
        left: auto;
        right: auto;
    }
}

// for scalable images/backgrounds
// Ex:
// div {
//     @include responsive-ratio(16,9);
// }
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );
    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

// Triangle (like in tooltip)
// Need to specify color, size, and direction
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
    @include pseudo($pos: $position);
    width: 0;
    height: 0;
    @if $round {
        border-radius: 3px;
    }
    @if $direction == down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round( $size / 2.5 );
    } @else if $direction == up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round( $size / 2.5 );
    } @else if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    } @else if  $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

// z-index
@function z($name) {
    @if index($z-indexes, $name) {
        @return (length($z-indexes) - index($z-indexes, $name)) + 1;
    } @else {
        @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
        @return null;
    }
}
$z-indexes: (
    "outdated-browser",
    "modal",
    "site-header",
    "page-wrapper",
    "site-footer"
);

/*
END MIXINS
 */

// KeyFrames
@keyframes imageAnimation {
  0% { opacity: 0; animation-timing-function: ease-in; }
  25% { opacity: 1; animation-timing-function: ease-out; }
  50% { opacity: 1 }
  75% { opacity: 0 }
  100% { opacity: 0 }
}

 // import other scscc files
@import './components/Header.scss';
@import './components/SectionHeading.scss';
@import './components/TextOverlay.scss';
@import './pages/EmployeeExperience.scss';
@import './pages/GardenPath.scss';
@import "node_modules/react-image-gallery/styles/scss/image-gallery.scss";


// Global styles
*

html {
  position: relative;
	min-height: 100%;
}

body {
  color: $light-black;
	font-family: $lato, sans-serif;
	font-weight: 400;
	font-size: 15px;
}

section:not(:last-of-type) {
  margin-bottom: 50px;
}

.placeholder {
  height: 70vh;
  h1 {
    font-size: 60px;
    text-align: center;
    text-transform: uppercase;
  }
}

.bg-card {
  padding: 150px 0;
}
